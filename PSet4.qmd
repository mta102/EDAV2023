---
title: "Test"
server: shiny
---

```{r}
installed.packages("data.table")
library(tidyverse)
library(data.table)
library(vcd)
```

```{r}
#data = read.csv("covid.csv")

covid <- fread("../covid_dataset/covid.csv")
covid[is.na(covid)] = 0
```

```{r}
#Functions

see_raw_data<-function(df,geography,time_period,year,group_name) {
output = df |> filter(Geography == geography,`Indicator Name`=="Vaccination uptake and intention",`Time Period` == time_period,Year == year, `Group Name`==group_name) |> select(`Group Category`,`Indicator Category`,`Estimate (%)`,`Sample Size`)
   return(output)
}


see_hesitance_summary<-function(df,geography,time_period,year,group_name,hesitant_group) {
output = df |> filter(Geography == geography,`Indicator Name`=="Vaccination uptake and intention",`Time Period` == time_period,Year == year, `Group Name`==group_name)  |> mutate(hesitant = ifelse(`Indicator Category` %in% hesitant_group,1,0)) |> group_by(`Group Category`,hesitant) |> summarise(hesitance_rate = sum(`Estimate (%)`),sample_size = first(`Sample Size`)) |> mutate(n_hesitance = round(hesitance_rate/100 * sample_size,0)) |> filter(hesitant == 1) |> select(`Group Category`,hesitance_rate,n_hesitance,sample_size) 
   return(output)
}


get_chi_sq<-function(df,geography,time_period,year,group_name,hesitant_group) {
  
  temp = df |> filter(Geography == geography,`Indicator Name`=="Vaccination uptake and intention", `Time Period` == time_period,Year == year, `Group Name`==group_name)  |> mutate(hesitant = ifelse(`Indicator Category` %in% hesitant_group,1,0)) |> group_by(`Group Category`,hesitant) |> summarise(hesitance_rate = sum(`Estimate (%)`),sample_size = first(`Sample Size`)) |> mutate(n_hesitance = round(hesitance_rate/100 * sample_size,0)) |> filter(hesitant == 1) |> select(`Group Category`,n_hesitance,sample_size) 
  if (nrow(temp) > 0) {
    expected_proportion = sum(temp$n_hesitance)/sum(temp$sample_size)

  temp = temp |> mutate(expected = sample_size*expected_proportion)
  
  res = chisq.test(x=temp$n_hesitance,p=temp$expected/sum(temp$expected))
   output<-list(round(res$statistic,digits = 0),res$p.value)
    
  }
  else {
    output<-list(0,0)
    
  }
  
  
   return(output)
}
```

```{r}

#exploration


temp = see_raw_data(covid, geography="National",time_period = "Apr 22 - May 1",year=2021,group_name="Sex")

temp2 = see_hesitance_summary(covid, geography="National",time_period = "Apr 22 - May 1",year=2021,group_name="Age by race/ethnicity",hesitant_group = c("Probably or definitely will not get vaccinated")) 
```

```{r}
# chi sq test - using original time periods

#unique(covid$`Group Name`)
group_name_toloop = c("Sex","Age","Race/Ethnicity (7 level)","Age by race/ethnicity","Sexual orientation","Gender identity","Metropolitan statistical area","Born in the U.S.", "Language of interview","Poverty status", "Insurance status","Social Vulnerability Index (SVI) of county of residence", "Political leaning of county of residence", "Received non-COVID-19 vaccine(s) in past two years", "Health condition associated with higher risk for COVID-19 (any)","Disability status (any)", "Pregnancy status (females age 18 – 49 years)", "Ever had COVID-19 disease (self-report)","Concern about getting COVID-19 disease", "Confidence in COVID-19 vaccine safety",  "Confidence that COVID-19 vaccine is important", "Healthcare provider recommended I get a COVID-19 vaccine",  "COVID-19 vaccination status of friends and family","Work or school requires COVID-19 vaccination" )


#group_name_toloop = c("Sex","Age","Race/Ethnicity (7 level)")
result_df <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(result_df) <- c("group_name", "X2_test_stat", "p_value")

for (x in group_name_toloop) {
  res = get_chi_sq(covid, geography="National",time_period = "Apr 22 - May 1",year=2021,group_name=x,hesitant_group = c("Probably or definitely will not get vaccinated"))
  result_df[nrow(result_df) + 1,] = c(x,res[1],res[2])

}
result_df = arrange(result_df,desc(X2_test_stat))

```

```{r}
# chi sq test - using 2021 first 3 monthly time periods
periods_to_combine_2021 = c("April 22 - May 29","May 30 - June 26","June 27 - July 31")
group_name_toloop = c("Sex","Age","Race/Ethnicity (7 level)","Age by race/ethnicity","Sexual orientation","Gender identity","Metropolitan statistical area","Born in the U.S.", "Language of interview","Poverty status", "Insurance status","Social Vulnerability Index (SVI) of county of residence", "Political leaning of county of residence", "Received non-COVID-19 vaccine(s) in past two years", "Health condition associated with higher risk for COVID-19 (any)","Disability status (any)", "Pregnancy status (females age 18 – 49 years)", "Ever had COVID-19 disease (self-report)","Concern about getting COVID-19 disease", "Confidence in COVID-19 vaccine safety",  "Confidence that COVID-19 vaccine is important", "Healthcare provider recommended I get a COVID-19 vaccine",  "COVID-19 vaccination status of friends and family","Work or school requires COVID-19 vaccination" )


covid_2021_analysis = covid%>% filter(`Year` == 2021, `Time Period` %in% periods_to_combine_2021, `Group Name` %in% group_name_toloop, `Geography Type` %in% c("Jurisdictional Estimates","National Estimates"), `Indicator Category` == "Probably or definitely will not get vaccinated", !grepl("-",Geography)) %>% mutate(n_hesitant = round(`Estimate (%)`/100 * `Sample Size`,0)) %>% group_by(pick(c(1:6))) %>% summarise(`Sample Size` = sum(`Sample Size`), n_hesitant = sum(n_hesitant)) %>% filter(Geography == "National") %>% mutate(`Estimate (%)` = n_hesitant / `Sample Size` * 100, `Time Period` = "2021 analysis period",Year = 2021)

result_df2 <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(result_df2) <- c("group_name", "X2_test_stat", "p_value")

for (x in group_name_toloop) {
  res = get_chi_sq(covid_2021_analysis,geography="National",time_period = "2021 analysis period",year=2021,group_name=x,hesitant_group = c("Probably or definitely will not get vaccinated"))
  result_df2[nrow(result_df2) + 1,] = c(x,res[1],res[2])

}
result_df2 = arrange(result_df2,desc(X2_test_stat))


```

```{r}
#mosaic example
localnews <- data.frame(age = c("18-29", "30-49", "50-64", "65+"),
                        followers = c(428, 2791, 4242, 4583),
                        nonfollowers = c(2423, 7176, 6921, 6328)) |> 
  mutate(total = followers + nonfollowers)

tidylocal <- localnews |>
  pivot_longer(cols = followers:nonfollowers, names_to = "group", values_to = "Freq") |> 
  mutate(group = fct_relevel(group, "nonfollowers"))

mosaic(group ~ age, direction = c("v", "h"), tidylocal,
       highlighting_fill = c("grey80", "cornflowerblue"))
```

```{r}

#mosaic plot function

mosaic_2var <-function(df,indep_var_group_name,n_chars) {
  
  truncate_string <- function(x) {
  str_sub(x, 1, n_chars)}

indep_var_group_name_no_spaces = gsub("[()\\[/\\\\ ]", ".", indep_var_group_name)
indep_var_group_name_no_spaces = truncate_string(indep_var_group_name_no_spaces)

temp = df %>% ungroup %>% filter(`Group Name` == indep_var_group_name) %>% mutate(n_not_hesitant = `Sample Size` - n_hesitant) %>%  select(`Group Category`, n_hesitant, n_not_hesitant,`Sample Size`) %>%  rename(
    !!indep_var_group_name_no_spaces := `Group Category`,hesitant = `n_hesitant`, `not hesitant` = n_not_hesitant) %>% 
  pivot_longer(cols = hesitant:`not hesitant`,names_to = "group", values_to = "Freq" )

temp[[indep_var_group_name_no_spaces]] =  substr(temp[[indep_var_group_name_no_spaces]], 1, n_chars)

formula = as.formula(paste("group", "~", indep_var_group_name_no_spaces))

mosaic(formula, direction = c("v", "h"), temp,
       highlighting_fill = c("grey80", "cornflowerblue"),gp_varnames = gpar(fontsize = 10, fontface = 1), gp_labels = gpar(fontsize = 6))
return(temp)
}

mosaic_2var(covid_2021_analysis,"Concern about getting COVID-19 disease",12)

```

```{r}

#time series analysis
#cleveland dot plot

annual_monthly_snapshots = c("April 22 - May 29","May 1 - May 28","April 30 - May 27")

snapshots = covid %>% filter(`Time Period` %in% annual_monthly_snapshots,`Group Name` %in% group_name_toloop,  ) %>% distinct(`Time Period`)




 `Geography Type` %in% c("Jurisdictional Estimates","National Estimates"), `Indicator Category` == "Probably or definitely will not get vaccinated", !grepl("-",Geography)) 

ggplot(counts2, aes(x = Age, y = Freq, color = Favorite)) +
  geom_point(size = 3) +
  coord_flip() +
  scale_color_manual(values = icecreamcolors) +
  theme_dotplot +
  theme(legend.position = "bottom")





```
